import telebot
import requests, random, datetime, sys, time, argparse, os
import time
import bot_db
import datetime
import spammer_serv
import number_spam_db

from datetime import timedelta

from telebot import types

TOKEN = '918851085:AAFhLBqJvMmmJWslrNAPpDMdr8Sxz_OO8SI'
bot = telebot.TeleBot(TOKEN)
user_pass = 'user117'
num_spam = '0'
num_spam_trial = '0'
id_trial = 0


@bot.message_handler(commands=['start'])
def welcome(message):
    global id_trial
    full_name = '{} - {}'.format(message.from_user.first_name, message.from_user.last_name)
    bot_db.reg(message.from_user.id, message.from_user.username, full_name)
    bot_db.date_sms_spam(message.from_user.id)
    id_trial = message.from_user.id
    item1 = types.KeyboardButton("–ù–∞—á–∞—Ç—å —Å–ø–∞–º ‚úâ")
    item2 = types.KeyboardButton("–ò–Ω—Ñ–æ üìú")
    item3 = types.KeyboardButton("–û–±–Ω–æ–≤–∏—Ç—å ‚öô")
    item4 = types.KeyboardButton("–°—Ç–∞—Ç—É—Å üé©")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(item1, item2, item3, item4)
    if bot_db.ver != 3:
        item5 = types.KeyboardButton("Professional version üõ°")
        markup.add(item5)
    print(bot_db.ver)
    if bot_db.ver == 3:
        item8 = types.KeyboardButton("–ë–∞–∑–∞ –¥–∞–Ω—ã—Ö üìö")
        markup.add(item8)

    sti = open('static/AnimatedSticker.tgs', 'rb')
    bot.send_sticker(message.chat.id, sti)
    bot.send_message(message.chat.id,
                    "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {0.first_name}! üòâ\n–Ø - <b>{1.first_name}</b>, –ø–æ–º–æ–≥—É —Ç–µ–±–µ –∑–∞–≤–∞–ª–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω —Ç–≤–æ–µ–≥–æ –¥—Ä—É–∂–∫–∞!\n"
                    .format(message.from_user, bot.get_me()), parse_mode='html', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def sms(message):
    global num_spam, num_spam_trial
    if message.chat.type == 'private':
        bot_db.date_sms_spam(message.from_user.id)
        if message.text == '–ù–∞—á–∞—Ç—å —Å–ø–∞–º ‚úâ':
            if bot_db.time_sms != 0:
                bot_db.time_sms = datetime.datetime.strptime(bot_db.time_sms, '%Y-%m-%d %H:%M:%S.%f')
                date_time_spam = datetime.datetime.now() - timedelta(days=0.5)
            if bot_db.ver != 0 or bot_db.time_sms == 0 or bot_db.time_sms < date_time_spam:
                bot.send_message(message.chat.id,
                                 "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n+380XXXXXXXXX UA üá∫üá¶\n+7XXXXXXXXXX RU üá∑üá∫")
            else:
                bot.send_message(message.chat.id, '–£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø–æ–ø—ã—Ç–∫–∏ —Å–ø–∞–º–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è, –ø—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ –Ω–∞—à—É '
                                                  '–ø—Ä–æ –≤–µ—Ä—Å–∏—é, –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ')
                exit(0)
        _phone = message.text
        s = _phone
        #     print(_phone)
        s = s[:0] + s[0 + 1:]
        if s.isdigit():
            if bot_db.ver == 2 or bot_db.ver == 3:
                num_spam = _phone
            elif bot_db.ver == 0:
                num_spam_trial = _phone

            bot.send_message(message.chat.id, "–í—ã –≤–≤–µ–ª–∏: " + _phone)
            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–ù–∞—á–∞—Ç—å", callback_data='good')
            item2 = types.InlineKeyboardButton("–û—Ç–º–µ–Ω–∞", callback_data='bad')
            markup.add(item1, item2)
            bot.send_message(message.chat.id, "–∫ —Å–ø–∞–º—É –≥–æ—Ç–æ–≤!", reply_markup=markup)

        elif message.text == '–ò–Ω—Ñ–æ üìú':
            bot.send_message(message.chat.id,
                             "–î—Ä—É–∂–æ—á–µ–∫ <b>{0.first_name}</b>, –Ø –±–æ—Ç –∏ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è —Ñ–ª—É–¥–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö"
                             " —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ —Å—Ä–µ–¥—Å—Ç–≤–æ–º –º–∞—Å—Å–æ–≤—ã—Ö üì© —Å–æ–æ–±—â–µ–Ω–∏–π –∏ üìû –†–∞–±–æ—Ç–∞—é —Å –º–Ω–æ–≥–∏–º–∏ —Å—Ç—Ä–∞–Ω–∞–º–∏ –°–ù–ì."
                             .format(message.from_user), parse_mode='html')
        elif message.text == '–û–±–Ω–æ–≤–∏—Ç—å ‚öô':
            bot.message_handler(commands=['start'])
            # welcome('start')
            bot.send_message(message.chat.id, "–ë–æ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω üíö")
            welcome(message)
        elif message.text == '–ë–∞–∑–∞ –¥–∞–Ω—ã—Ö üìö':
            if bot_db.ver == 3:
                bot.send_message(message.chat.id, "–í—ã–≤–æ–∂—É –±–∞–∑—É –¥–∞–Ω—ã—Ö üíé")
                bot_db.db_info_adm()
                print(bot_db.baza_viv)
        elif message.text == '–°—Ç–∞—Ç—É—Å üé©':
            bot_db.date_sms_spam(message.from_user.id)
            status = ''
            if bot_db.ver == 0:
                status = 'trial version'
            elif bot_db.ver == 2:
                status = 'professional version'
            elif bot_db.ver == 3:
                status = 'Administrator'
            else:
                status = 'Error'
            t_ime = bot_db.time_sms
            if bot_db.time_sms == 0:
                t_ime = '--'
            bot.send_message(message.chat.id, "<b>{}</b>\n–°—Ç–∞—Ç—É—Å : <b>{}</b> \n–ü–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è —Å–ø–∞–º–∞: <b>{}</b>"
                                              "\n–°–µ–π—á–∞—Å: <b>{}</b>"
                             .format(message.from_user.first_name, status, t_ime, datetime.datetime.now()),
                             parse_mode='html')
        elif message.text == 'Professional version üõ°':
            bot_db.date_sms_spam(message.from_user.id)
            if bot_db.ver == 0:
                bot.send_message(message.chat.id, "–ö—É–ø–∏ –ø—Ä–∏–≤–∞—Ç–∫—É, –∏ –ø–æ–ª—É—á–∏ —Å–ª–µ–¥—É—é—â–∏–µ –ø–ª—é—à–∫–∏:\n‚Ä¢ –°–ø–∞–º –±–µ–∑ –≥—Ä–∞–Ω–∏—Ü\n "
                                                  "–ê–Ω—Ç–∏ —Å–ø–∞–º\n –°–ø–∞–º –±–µ–∑ –æ—á–µ—Ä–µ–¥–∏\n –ë–æ–ª—å—à–µ üì© —Å–æ–æ–±—â–µ–Ω–∏–π –∏ üìû\n –ß—Ç–æ–±—ã "
                                                  "–ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø—Ä–æ–º–æ –≤–µ—Ä—Å–∏—é, –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É <b>@Xande_er</b>"
                                 ,parse_mode='html')
            else:
                bot.send_message(message.chat.id, "–£ –≤–∞—Å –∫—É–ø–ª–µ–Ω–∞ Professional version, —Å–ø–∞—Å—Å–∏–±–æ —á—Ç–æ –≤—ã —Å –Ω–∞–º–∏)")
        elif message.text == '':
            if spammer_serv._phone == '':
                number_spam_db.number_spam_proces()


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    global num_spam, num_spam_trial, id_trial
    try:
        if call.message:
            if call.data == 'good':
                bot_db.date_sms_spam(call.message.chat.id)
                if bot_db.ver == 2 or bot_db.ver == 3:
                    bot.send_message(call.message.chat.id, "–°–ø–∞–º –∑–∞–ø—É—â–µ–Ω –Ω–∞ 15 –º–∏–Ω. üòÉ üòÉ")
                    bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                                              text="—â–∞—Å–ª–∏–≤–æ–≥–æ –¥–Ω—è üòé")
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                          text="—â–∞—Å–ª–∏–≤–æ–≥–æ –¥–Ω—è üòé", reply_markup=None)
                    bot_db.spam_date(call.message.chat.id)
                    spammer_serv.Main_1(num_spam)
                elif bot_db.ver == 0:
                    number_spam_db.bd_numbers(num_spam_trial, call.message.chat.id)
                    bot.send_message(call.message.chat.id, "–í–∞—à –Ω–æ–º–µ—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å, –æ–∂–∏–¥–∞–π—Ç–µ —Å–ø–∞–º–∞ üòÉ üòÉ\n"
                                                           "–ù–µ —Ö–æ—Ç–∏—Ç–µ –∂–¥–∞—Ç—å?? –ü—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ professional version")
                    bot_db.spam_date(call.message.chat.id)
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                          text="—â–∞—Å–ª–∏–≤–æ–≥–æ –¥–Ω—è üòé", reply_markup=None)
                    num_spam_trial = ''
                if num_spam_trial == '':
                    number_spam_db.number_spam_proces()
                    num_spam_trial = str(number_spam_db.number_spam_go)
                    num_spam_trial = '+{}'.format(num_spam_trial)
                    if num_spam_trial != 0 and num_spam_trial != '':
                        bot.send_message(number_spam_db.id_spam_go, "–ü—Ä–∏–π—à–ª–∞ –≤–∞—à–∞ –æ—á–µ—Ä–µ–¥—å\n–°–ø–∞–º –∑–∞–ø—É—â–µ–Ω –Ω–∞ 15 –º–∏–Ω. "
                                                                    "üòÉ üòÉ")
                        spammer_serv.Main_1(num_spam_trial)
                        number_spam_db.id_spam_go = 0
                        num_spam_trial = ''
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, "–°–ø–∞–º –∑–∞–∫–æ–Ω—á–µ–Ω üòÉ üòÉ")
                bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                                          text="—â–∞—Å–ª–∏–≤–æ–≥–æ –¥–Ω—è üòé")
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      reply_markup=None)
                exit(0)

    except Exception as e:
        print(repr(e))


# RUN
bot.polling(none_stop=True)